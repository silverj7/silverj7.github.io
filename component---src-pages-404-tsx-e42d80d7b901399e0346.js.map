{"version":3,"file":"component---src-pages-404-tsx-e42d80d7b901399e0346.js","mappings":"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","sources":["webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-T6ZDZOLO.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-3RENZ2UO.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-QB2Y5VKH.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-UVUR7MCU.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/button/dist/chunk-J37R6SZE.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-K7XRJ7NL.mjs","webpack://gatsby-starter-chakra-ui-type-script/./src/pages/404.tsx","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs"],"sourcesContent":["'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","'use client'\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n//# sourceMappingURL=chunk-T6ZDZOLO.mjs.map","'use client'\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n//# sourceMappingURL=chunk-3RENZ2UO.mjs.map","'use client'\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n//# sourceMappingURL=chunk-QB2Y5VKH.mjs.map","'use client'\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n//# sourceMappingURL=index.mjs.map","'use client'\nimport {\n  useButtonType\n} from \"./chunk-J37R6SZE.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-T6ZDZOLO.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-3RENZ2UO.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-QB2Y5VKH.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n//# sourceMappingURL=chunk-UVUR7MCU.mjs.map","'use client'\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n//# sourceMappingURL=chunk-J37R6SZE.mjs.map","'use client'\n\n// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n//# sourceMappingURL=chunk-K7XRJ7NL.mjs.map","import * as React from \"react\";\r\nimport { Link, HeadFC, PageProps } from \"gatsby\";\r\nimport {\r\n  Box,\r\n  Code,\r\n  Heading,\r\n  Link as ChakraLink,\r\n  Text,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst NotFoundPage: React.FC<PageProps> = () => {\r\n  return (\r\n    <Box p={24} fontFamily=\"-apple-system, Roboto, sans-serif, serif\">\r\n      <Heading as=\"h1\" mt={0} mb={16} maxW=\"container.sm\">\r\n        Page not found\r\n      </Heading>\r\n      <Text mb={12}>\r\n        Sorry 😔, we couldn’t find what you were looking for.\r\n        <br />\r\n        {process.env.NODE_ENV === \"development\" ? (\r\n          <>\r\n            <br />\r\n            Try creating a page in{\" \"}\r\n            <Code colorScheme=\"yellow\" p={1} fontSize=\"lg\" borderRadius=\"base\">\r\n              src/pages/\r\n            </Code>\r\n            .\r\n            <br />\r\n          </>\r\n        ) : null}\r\n        <br />\r\n        <Button>\r\n          <ChakraLink as={Link} to=\"/\">\r\n            Go home\r\n          </ChakraLink>\r\n        </Button>\r\n      </Text>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n\r\nexport const Head: HeadFC = () => <title>Not found</title>;\r\n","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map","'use client'\n\n// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n//# sourceMappingURL=chunk-PULVB27S.mjs.map"],"names":["Text","props","ref","styles","className","align","decoration","casing","rest","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","jsx","p","cx","__css","displayName","ButtonGroupProvider","useButtonGroup","strict","name","ButtonIcon","children","_children","isValidElement","cloneElement","focusable","_className","span","display","alignSelf","flexShrink","ButtonSpinner","label","placement","spacing","color","width","height","marginProp","spinnerStyles","useMemo","alignItems","position","fontSize","lineHeight","div","mergeRefs","refs","node","forEach","value","current","error","Error","assignRef","useMergeRefs","Button","group","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_ref","defaultType","isButton","setIsButton","useState","useCallback","tagName","useButtonType","contentProps","jsxs","button","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Link","isExternal","a","target","rel","NotFoundPage","React","Box","fontFamily","Heading","mt","mb","maxW","ChakraLink","to","Head","h2","Square","size","centerContent","boxSize","flexGrow","borderRadius"],"sourceRoot":""}